{
    "project": {
        "name": "RESTest Example",
        "description": "Doc Spec and Test in one file",
        "version": "2.0",
        "url": "http://"
    },
    "files": {
        "build\\Specs.php": {
            "name": "build\\Specs.php",
            "modules": {
                "RESTest": 1
            },
            "classes": {
                "SampleClass": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "RESTest": {
            "name": "RESTest",
            "submodules": {},
            "classes": {
                "SampleClass": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build\\Specs.php",
            "line": 2
        }
    },
    "classes": {
        "SampleClass": {
            "name": "SampleClass",
            "shortname": "SampleClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "RESTest",
            "namespace": "",
            "file": "build\\Specs.php",
            "line": 6
        }
    },
    "classitems": [
        {
            "file": "build\\Specs.php",
            "line": 11,
            "description": "This is a simple demo of the RESTest philosphy\nHere I use php, but it could be any language...",
            "itemtype": "method",
            "name": "sampleService This method implements out webservice sample",
            "params": [
                {
                    "name": "foo",
                    "description": "This is the foo parameter",
                    "type": "String"
                },
                {
                    "name": "bar",
                    "description": "This is the bar parameter",
                    "type": "String"
                }
            ],
            "restservice": "{GET} /services/sample.php?foo={foo}&bar={bar} This is the request Pattern for the webservice",
            "return": {
                "description": "A string containing foo and bar",
                "type": "String"
            },
            "resttest": "firstTestcase {\n\t\t\ttype : 'restUnitTest', 'restIntegration'\n\t\t... here the we put the RESTest JSON testcase definition\n} Test if the service returns the expected result",
            "class": "SampleClass",
            "module": "RESTest"
        }
    ]
}